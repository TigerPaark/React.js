// 원시타입 vs 객체타입 = 가변값(하나를 바꾸면 둘다 바뀐다.)
// 값이 저장되거나 복사되는 과정이 서로 다르다.

// 원시타입 : 값 자체로써 변수에 저장되고 복사된다.
// 불변값이다.(메모리 값 수정X)
// Number, String, Boolean 등

// 객체타입 : 참조값을 통해 변수에 저장되고 복사된다
// 가변값이다 (메모리 값 수정O)
// Object, Array, Function 등

// 주의 사항 : 1. 의도치 않게 수정될 수 있다.
// o1이랑 o2가 같은데 밑에 o2를 바꾸면 둘다 바뀐다.
// 얕은 복사 vs 깊은 복사

// 얕은 복사
// let o1 = {name:"박세진"};
// let o2 = o1;
// 원본 객체가 수정될 수 있어 위험함

// 깊은 복사
// let o1 = {name: "박세진"};
// let o2 = {...o1};
// 원본 객체가 수정될 일이 없어 안전함!!

// 주의 사항 : 2. 객체간의 비교는 기본적으로 참조값을 기준으로 이루어진다.
// 얕은 비교: o1 === o2
// 참조값을 기준으로 비교

// 깊은 비교: JSON.stringify(o1) === JSON.stringify(o2)
// 객체를 문자열로 변환하여 비교
// JSON.stringify등의 내장함수를 이용해야 함

// 주의 사항 : 3. 배열과 함수도 사실 객체이다.
